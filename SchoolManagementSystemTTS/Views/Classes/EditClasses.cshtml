@model Class
@{
    ViewBag.Title = "EditClasses";
}

@using (Html.BeginForm("EditClasses", "Classes", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Classid)

        <div class="card mt-3 mb-3">
            <div class="card-header">
                <h3 class="text-center">Edit Class</h3>
                <hr />
            </div>
            <div class="card-body row">

                <div class="form-group col-md-6 mb-3">
                    @Html.LabelFor(model => model.INSTID, "INSTID", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.DropDownList("INSTID", null, "----Select----", htmlAttributes: new { @class = "form-control", @id = "institute" })
                        @Html.ValidationMessageFor(model => model.INSTID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6 mb-3">
                    @Html.LabelFor(model => model.CAMPID, "CAMPID", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.DropDownList("CAMPID", null, "----Select----", htmlAttributes: new { @class = "form-control", @id = "campus" })
                        @Html.ValidationMessageFor(model => model.CAMPID, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group col-md-6 mb-3">
                    @Html.LabelFor(model => model.Progid, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.DropDownList("Progid", null, "----Select----", htmlAttributes: new { @class = "form-control", @id = "program" })
                        @Html.ValidationMessageFor(model => model.Progid, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group col-md-6 mb-3">
                    @Html.LabelFor(model => model.Classname, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Classname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Classname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6 mb-3">
                    @Html.LabelFor(model => model.Classdescription, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Classdescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Classdescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-none">
                    @Html.LabelFor(model => model.Addedby, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Addedby, new { htmlAttributes = new { @class = "form-control d-none" } })
                        @Html.ValidationMessageFor(model => model.Addedby, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-none">
                    @Html.LabelFor(model => model.AddedDate, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.AddedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddedDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-none">
                    @Html.LabelFor(model => model.Updatedby, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Updatedby, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updatedby, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-none">
                    @Html.LabelFor(model => model.Updatedt, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Updatedt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updatedt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6 mb-3">
                    @Html.LabelFor(model => model.ActvStatus, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-12">
                        @Html.DropDownList("ActvStatus", new List<SelectListItem> { new SelectListItem { Text = "Active", Value = "1" }, new SelectListItem { Text = "Inactive", Value = "0" } }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ActvStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6 mb-3"></div>

                <div class="form-group col-md-6 mb-3">
                    <div class=" col-md-12 d-flex justify-content-end">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "ClassesList")
</div>

<script>
    $(document).ready(function () {


        $("#institute").change(function () {
            var InstID = $('#institute').val();
            debugger;
            $.ajax({
                type: 'POST',
                url: '/DropDowns/GetCampus?id=' + InstID,  // Replace with your actual API endpoint URL
                contentType: 'application/json',
                success: function (response) {
                    debugger;
                    if (response != "") {
                        // Handle a successful response from the server
                        $("#campus").empty();

                        $("#campus").append(response);
                    }

                },
                error: function (error) {
                    // Handle errors
                    console.error(error);
                }
            });
        });




        $("#campus").change(function () {
            var InstID = $('#institute').val();
            var campus = $('#campus').val();
            debugger;
            $.ajax({
                type: 'POST',
                url: '/DropDowns/Getprog?campus=' + campus + "&institiute=" + InstID,  // Replace with your actual API endpoint URL
                contentType: 'application/json',
                success: function (response) {
                    debugger;
                    if (response != "") {
                        // Handle a successful response from the server
                        $("#program").empty();
                        $("#program").append(response);
                    }
                },
                error: function (error) {
                    // Handle errors
                    console.error(error);
                }
            });
        });







    });
</script>

